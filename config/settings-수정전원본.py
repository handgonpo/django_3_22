"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# ✅ [base.py → local.py / deploy.py 로 이동됨]
# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-ya-jzo#v4gtbfj*tjuyk_iyzu9_$6i9v3@gbl4v4ow1d=6i2y='

# ✅ [base.py → local.py / deploy.py 로 이동됨]
# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ✅ [base.py → local.py / deploy.py 로 이동됨]
# ALLOWED_HOSTS = []

CUSTOM_APPS = [
    'todoList',
    'users',
]

THIRD_PARTY_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    # ✅ [추가됨] ckeditor는 base.py로 이동
    # 'ckeditor',
]

INSTALLED_APPS = CUSTOM_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# ✅ [sqlite 설정은 base.py에 있음, local/deploy에서 override]
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
LANGUAGE_CODE = 'ko-kr'  # ✅ base.py에 있음

TIME_ZONE = 'UTC'  # ❗ base.py에서는 'Asia/Seoul'로 변경됨

USE_I18N = True

USE_TZ = True


# Static files
STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# deploy, local에 재정의됨
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.SessionAuthentication',  # ✅ 세션 기반
#     ],
#     'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
#     'PAGE_SIZE': 5,
# }

# ✅ base.py에 있음
AUTH_USER_MODEL = 'users.User'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# ✅ 로그인 관련 설정들도 base.py로 이동됨
# LOGIN_URL = "/auth/login/"
# LOGIN_REDIRECT_URL = "/todoList/list/"
# LOGOUT_REDIRECT_URL = "/auth/login/"

# ✅ 미디어 관련 설정도 base.py로 이동됨
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# ✅ CKEditor 업로드 경로도 base.py로 이동됨
# CKEDITOR_UPLOAD_PATH = 'uploads/ckeditor/'
