version: "3.7"  # Docker Compose 버전

services:
  nginx:  # Nginx 서비스 (정적 파일 서빙 및 리버스 프록시 역할)
    image: nginx:1.19.5  # 사용할 nginx 이미지
    ports:
      - 80:80    # 호스트 80번 포트 → 컨테이너 80번 포트 (HTTP 접속)
      - 443:443  # HTTPS용 포트 (SSL 설정 시 사용, 지금은 생략 가능)
    networks:
      - network  # 사용자 정의 네트워크로 연결 (서비스끼리 통신 가능)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # nginx 설정 파일을 컨테이너로 복사
      - static_volume:/data/static  # 정적 파일을 공유할 볼륨
    depends_on:
      - django_container  # django가 먼저 떠야 nginx가 실행됨

  django_container:  # Django 웹 애플리케이션
    build:
      context: .  # 현재 디렉토리 기준으로 Dockerfile 빌드
    image: django_course:v1.0.0  # 빌드 후 생성될 이미지 이름
    networks:
      - network  # 같은 네트워크에 연결
    volumes:
      - static_volume:/home/django_3_22/staticfiles  # Django가 collectstatic 한 파일 경로 공유
    environment:
      - DJANGO_SECRET_KEY=super-secret-key  # Django 시크릿 키
      - POSTGRES_DB=django_db              # DB 이름
      - POSTGRES_USER=django_user          # DB 사용자 이름
      - POSTGRES_PASSWORD=yourpassword123  # DB 비밀번호

  postgresdb:  # PostgreSQL 데이터베이스 컨테이너
    image: postgres:13.11  # 안정적인 PostgreSQL 이미지
    ports:
      - 5432:5432  # DB 접속 포트
    networks:
      - network
    volumes:
      - postgres_database:/var/lib/postgresql/data  # DB 데이터 유지용 볼륨
    environment:
      - POSTGRES_DB=django_db
      - POSTGRES_USER=django_user
      - POSTGRES_PASSWORD=yourpassword123

# 서비스 간 통신을 위한 네트워크 정의
networks:
  network:

# 데이터 유지와 공유를 위한 볼륨 정의
volumes:
  postgres_database:
  static_volume:
